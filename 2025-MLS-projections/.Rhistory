Recruitment$Recruits <- SSInput$RecruitmentObs %>%
filter(Yr %in% firstyr:lastyr) %>%
select(pred_recr,SpawnBio)
# Save age-0 recruitment (thousands of age-0 fish on July 1st in endyr) for checking input
Recruitment_Age0_July_1st <- Recruitment$Recruits[,1]
# pply survival rate ot calculate age-0.5 recruitment on January 1st for annual projections (thousands of age-0.5 fish on January 1st in endyr+1)
Recruitment$Recruits[,1] <- exp(-0.5*M0)*Recruitment$Recruits[,1]
} else if (RecruitType[1] == 3 || RecruitType[1] == 14)
{
## Models 3 and 14
# Recruitment is a list with two objects: Nobs is the number of observations, and recruits is a vector of observed recruitment
Recruitment$Nobs <- 5  ## Set Nobs to be the number of (R) observations in Recruitment
firstyr <- 2016 ## Set firstyr to be the first year for the (R) data
lastyr <- 2020 ## Set lastyr to be the last year for the (R) data
# Select (R,SSB) data from SSInput object
Recruitment$Recruits <- SSInput$RecruitmentObs %>%
filter(Yr %in% firstyr:lastyr) %>%
select(pred_recr)
## Save age-0 recruitment (thousands of age-0 fish on July 1st in endyr) for checking input
Recruitment_Age0_July_1st <- Recruitment$Recruits
## Calculate age-0.5 recruitment on January 1st for annual projections (thousands of age-0.5 fish on January 1st in endyr+1)
Recruitment$Recruits <- exp(-0.5*M0)*Recruitment$Recruits
} else if (RecruitType[1] == 5)
{
## Model 5
#Recruitment is a list with 3 to 5 objects: alpha and beta which are the S/R parameters, Kparm (only for models 7 and 12) is the K parameter, var is the recruitment variance, and for 10, 11 and 12, Phi is the Phi parameter, and LastResid is the last recruitment residual for the auto-correlated error
Recruitment$alpha <- SSInput$alpha/1000.0
Recruitment$beta <- SSInput$beta/1000.0
Recruitment$var <- SSInput$BH_var
# BH_var is the SS3 variable SR_sigmaR
Recruitment$var <- SSInput$BH_var^2
## Calculate age-0.5 recruitment on January 1st for annual projections (thousands of age-0.5 fish on January 1st in endyr+1)
Recruitment$alpha <- exp(-0.5*M0)*Recruitment$alpha
# BH_var is the SS3 variable SR_sigmaR
# Point to include lognormal bias adjustment exp(-0.5*SR_sigmaR_sqr)
Recruitment$alpha <- Recruitment$alpha*exp(-0.5*Recruitment$var)
} else
{
## Model 4 and 15
# Recruitment is a list with 4 objects: Nobs is a vector with the number of observations in each recruitment level, Level1obs is a dataframe of recruitment and SSB for the level one recruitment observations, Level2Obs is a dataframe of recruitment and SSB for the level two recruitment observations, and SSBBreak is the SSB break limit between the two recruitment levels
## Models 5, 6, 7,10, 11, and 12
#Recruitment is a list with 3 to 5 objects: alpha and beta which are the S/R parameters, Kparm (only for models 7 and 12) is the K parameter, var is the recruitment variance, and for 10, 11 and 12, Phi is the Phi parameter, and LastResid is the last recruitment residual for the auto-correlated error
#Recruitment <- list()
#Recruitment$Recr_Model <- 5
#Recruitment$Recr_Prob <- rep(1,NYears)
#Recruitment$alpha <- SSInput$alpha
#Recruitment$beta <- SSInput$beta
#Recruitment$var <- SSInput$BH_var
## Model 8 and 13
# Recruitment is a list with 2 (model 8) or 4 objects (model 13): the mean and standard deviation (stdev) of the lognormal distribution, and for model 13, Phi and LastResid which is the value of the last recruitment residual
## Model 16, 17, 18, and 19
# Recruitment is an object with 5 objects: Ncoeff is the number of coefficients, var is the variance, Intercept is the y-intercept, coeff is a vector containing the value of each coefficient, and Observations is a dataframe where each row the observations for each coefficient and each column is a year of the projection
## Model 20
# Recruitment is a vector of the fixed recruitment for each year.
## Model 21
# Recruitment is a list containing 3 objects: Nobs is the number of observations, Obs is a vector of observed recruitments, and SSBHingeValue is the value at which the linear decline to zero begins.
}
# Set Flimit = F20% and Fmsy
# Flimit <- 0.53
# Fmsy <- 0.63
## Set harvest strategy based on catch or F or both
## The Phased_template.inp is set up for a phased harvest strategy
## The project initialization runs from 2021 to 2024 and sets F to be
## the average annual F during 2018-2020
## The first phase runs from 2025 to 2027 at a quota of Q = 2400 mt
## The second phase runs from 2028 to 2031 at a quota of Q = 2225 mt
## The third phase runs from 2032 to 2034 at a quota of Q = 2100 mt
TotalCatchPhase1 <- 2400
TotalCatchPhase2 <- 2225
TotalCatchPhase3 <- 2100
# FleetRemovals <- t(sapply(ProportionCatch, function(p) rep(p*TotalCatch,NYears)))
# Harvest <- list("Type"=c(rep(1,NYears)),"Harvest"=FleetRemovals)
# Set 3-year average to be the expected initial total F Multiplier during 2021-2024
InitTotalF <- 0.68
# Set reference F
FReference <- 0.63
# Set FleetRemovals to be the vector proportion of catch biomass by fleet in YearAvg
# times the Phase 1 catch biomass during all years, or [1,NYears]
FleetRemovals <- t(sapply(ProportionCatch, function(p) rep(p*TotalCatchPhase1,NYears)))
FleetRemovals[,1:4] <- t(sapply(FleetGroupCatch2025[,1:4], function(p) rep(p,1)))
FleetRemovals
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_2025_MLS_scenario1.R")
install.packages(c("cards", "cli", "curl", "data.table", "duckdb", "gtsummary", "jsonlite", "processx", "ps", "purrr", "QuickJSR", "R6", "rfishbase", "tinytex", "xfun", "zoo"))
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_2025_MLS_scenario1.R")
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_2025_MLS_scenario1.R")
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_2025_MLS_scenario1.R")
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_2025_MLS_scenario2.R")
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_2025_MLS_scenario3.R")
setwd("./Scenario1")
ls()
rm(list=ls())
load("2025_MLS_scenario1.rdat")
source("2025_MLS_scenario1.rdat")
load("2025_MLS_scenario1.rdat")
data <- dget("2025_MLS_scenario1.rdat")
data <- dget("2025_MLS_scenario1.rdat")
data_env <- new.env()
source("2025_MLS_scenario1.rdat", local = data_env)
data <- dget("2025_MLS_scenario1.rdat")
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_2025_MLS_scenario4.R")
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_2025_MLS_scenario4.R")
scenario2 <- dget("2025_MLS_scenario2.rdat")
getwd()
setwd('scenario2')
scenario2 <- dget("2025_MLS_scenario2.rdat")
names(scenario2)
scenario2$ssb
rm(scenario2)
s2 <- dget("2025_MLS_scenario2.rdat")
names(s2)
s2$metadata
names(s2)
s@genparms
s2$genparms
s2$stock2028
names(s2$genparms)
ls()
setwd("../scenario1")
s1 <- dget("2025_MLS_scenario1.rdat")
names(SS_outputForAGEPRO)
SS_outputForAGEPRO
diamonds
library(tidyverse)
diamonds
depth_dist <- ggplot(diamonds, aes(depth)) + xlim(58, 68)
library(ggplot2)
depth_dist <- ggplot(diamonds, aes(depth)) + xlim(58, 68)
depth_dist
depth_dist +
geom_histogram(aes(y = ..density..), binwidth = 0.1) +
facet_grid(cut ~ .)
depth_dist +
geom_histogram(aes(y = after_stat(density)), binwidth = 0.1) +
facet_grid(cut ~ .)
names(diamonds)
names(s1)
depth_dist + geom_freqpoly(aes(y = ..density.., colour = cut),
binwidth = 0.1)
depth_dist + geom_histogram(aes(fill = cut), binwidth = 0.1,
position = "fill")
names(s2)
s2$genparms
year <- seq(s2$genparms$startyear,s2$genparms$endyear,1)
year
names(s2$ssb)
obs <- s2$ssb$pct50
obs
plot(year,obs)
p <- ggplot(df, aes(year, obs, label = label)) +
xlab("Year") + ylab("Spawning Biomass")
p <- ggplot(s2, aes(year, obs, label = label)) +
xlab("Year") + ylab("Spawning Biomass")
df <- data.frame(
x = year,
y = obs,
)
df <- data.frame(
x = year,
y = obs
)
df
p <- ggplot(df, aes(year, obs, label = label)) +
xlab("Year") + ylab("Spawning Biomass")
p
p <- ggplot(df, aes(year, obs) +
xlab("Year") + ylab("Spawning Biomass")
)
p <- ggplot(df, aes(year, obs)) +
xlab("Year") + ylab("Spawning Biomass")
p
is.data.frame(s2$ssb)
is.list(s2$ssb)
p + geom_line() + opts(title = "geom_line")
p + geom_line()
names(s2)
names(s2$ssb
)
se <- s2$ssb$sdev
df <- data.frame(
x = year,
y = obs, se = se
)
p + geom_line() + geom_errorbar(aes(x=year,ymin=obs-1.96*se,ymax=obs+1.96*se),data=df,width=0)
)
p <- ggplot(df, aes(year, obs) +
+     xlab("Year") + ylab("Spawning Biomass"))
p <- ggplot(df, aes(year, obs)) +
+     xlab("Year") + ylab("Spawning Biomass")
p <- ggplot(df, aes(year, obs)) + xlab("Year") + ylab("Spawning Biomass")
s1 <- dget("2025_MLS_scenario1.rdat")
getwd()
df <- data.frame(
x = year,
y = obs, se = se
)
source("C:/Users/jon.brodziak/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/s2-plot.R")
s1 <- dget("2025_MLS_scenario1.rdat")
year <- seq(s1$genparms$startyear,s1$genparms$endyear,1)
obs <- s1$ssb$average
se <- s1$ssb$sdev
df <- data.frame(
x = year, y = obs, se = se
)
p <- ggplot(df, aes(year, obs)) + xlab("Year") + ylab("Spawning Biomass")
p + geom_line() + geom_errorbar(aes(x=year,ymin=obs-1.96*se,ymax=obs+1.96*se),data=df,width=0)
source("C:/Users/jon.brodziak/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/s2-plot.R")
source("C:/Users/jon.brodziak/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/s2-plot.R", echo=TRUE)
source("C:/Users/jon.brodziak/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/s2-plot.R", echo=TRUE)
source("C:/Users/jon.brodziak/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/s2-plot.R", echo=TRUE)
source("C:/Users/jon.brodziak/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/s2-plot.R", echo=TRUE)
source("C:/Users/jon.brodziak/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/s2-plot.R", echo=TRUE)
source("C:/Users/jon.brodziak/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/s2-plot.R", echo=TRUE)
source("C:/Users/jon.brodziak/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/s2-plot.R", echo=TRUE)
source("C:/Users/jon.brodziak/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/s2-plot.R", echo=TRUE)
source("C:/Users/jon.brodziak/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/s2-plot.R", echo=TRUE)
names(s1)
names(genparms)
names(s1$genparms)
names(threshold)
names(s1$threshold)
s1$threshold$ssb
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
names(s1)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-test.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-test.R", echo=TRUE)
rlang::last_trace()
rlang::last_trace()
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-test.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-test.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/ssb-plot.R", echo=TRUE)
names(s1)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_2025_MLS_scenario1.R", echo=TRUE)
## R Script filename = make_2025_MLS_scenario1.R
## Purpose: Extract input data and build an AGEPRO input file
## for a 3-phase catch-based projection using YearAvg = [2020,2020]
## Produces P(SSB rebuild in 2034) = 0.XX at Q=(x,y,z)
## 25-Feb-2025
## Clear RStudio environment if needed
## rm(list=ls())
##### SET LIBRARIES #####
library(r4ss)
library(plyr)
library(dplyr)
library(purrr)
##### SET Rscripts FOLDER #####
script.dir="C:\\Users\\jon.brodziak\\Desktop\\2024 WCNPO MLS Rebuilding\\Rscripts"
##### SET base SS3 MODEL FOLDER #####
model.dir <- c("C:\\Users\\jon.brodziak\\Desktop\\2024 WCNPO MLS Rebuilding\\base")
##### SET MODEL DOMAIN VARIABLES #####
## Set last year of assessment
endyr <- 2020
## Set time step to be "Year" or "Quarter" for years as quarters
TimePeriod <- "Year"
## Set number of years in projection
NYears <- 14
## Set bootstrap file = boot_file
boot_file <- "C:\\Users\\jon.brodziak\\Desktop\\2024 WCNPO MLS Rebuilding\\Bootstrap-numbers-at-age\\2023_WCNPOMLS.bsn"
## Set number of bootstraps (number of rows in boot_file)
NBoot <- 100
## Set multiplier to convert bootstrap file elements to be absolute numbers of fish at age
BootFac = 1000
## Set number of simulations per bootstrap
NSims <- 100
##### SET AGEPRO RECRUITMENT MODEL VARIABLES #####
## Set number of recruitment models = 1
NRecModel <- 3
## Set recruitment model vector with NRecModel elements
## Here the ordered vector RecruitType is set to be model 14
RecruitType <- c(5)
## RecFac is a multiplier to convert units of recruit model output (e.g., 1000 fish) to AGEPRO numbers of fish
RecFac <- 1000
## SSBFac is a divisor to convert kg of SSB in AGEPRO to recruit model input units of SSB (e.g., 1000 mt)
## Note: Set SSBFac <- 1 for recruitment models 2, 4, and 5 given the SS3 extraction code
SSBFac <- 1
## Maximum number of recruitment observations in a recruit model
MaxRecObs <- 100
## Set age-0 annual natural mortality rate to convert age-0.0 fish to age-0.5 fish
M0 <- 0.54
## Set normalize selectivity flag
## If NormSelFlag = 1 then rescale selectivities for each fleet group to have a max of 1
NormSelFlag <- 1
##### Source SS_Agepro.R script #####
source(file.path(script.dir,"SS_to_Agepro.R"))
##### Extract SSInput with SS_To_Agepro.R script #####
SSInput <- SS_To_Agepro(model.dir=model.dir, script.dir=script.dir, endyr=2020, TimeStep="Year")
## Copy SSInput into Work to save it for auxiliary analyses
Work <- SSInput
##################### UPDATED CODE 11-JAN-2024 #####################
## Adjust SSInput to the fleets you want to include: Here we choose the fleets with unique selectivities
UniqueFleets<- SSInput$Fishery_SelAtAge %>%
filter(Yr == 2020) %>%
distinct(across(-c(Yr, Fleet)), .keep_all = TRUE) %>%
select(Fleet) %>% pull()
## Identify years in the model
Years <- seq(min(SSInput$Fishery_SelAtAge$Yr),max(SSInput$Fishery_SelAtAge$Yr))
## Identify set of unique fleets by year
matching_indices<-list()
for(j in 1:length(Years)) {
matching_indices[[j]]<-list()
for (i in 1:length(UniqueFleets)){
# Select the target row (row 1 in this case)
target_row <- SSInput$Fishery_SelAtAge[which(SSInput$Fishery_SelAtAge$Fleet==UniqueFleets[i]&SSInput$Fishery_SelAtAge$Yr==Years[j]), -2]
# Find rows that match the target row
matching_indices[[j]][[i]] <- which(apply(SSInput$Fishery_SelAtAge[,-2], 1, function(x) all(x %in% target_row)))
}}
YearAvg <- seq((endyr-2),endyr)  ## Define the set of years you want to average over for selectivity and catch at age over
YearAvg
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_2025_MLS_scenario1.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_2025_MLS_scenario1.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_2025_MLS_scenario2.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_3_RECRUIT.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_2025_MLS_scenario2.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_3_RECRUIT.R", echo=TRUE)
getwd()
setwd("Base Runs")
getwd()
setwd("Scenario1")
getwd()
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/correct_rdat_fleet_names.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/correct_rdat_fleet_names.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/ssb-plot.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/test.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/test.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/test.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
ls()
rm(ls=())
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
# file = catch-plot.R
# R script to create spawning biomass plot
# for projection output *.rdat file
# Load required library
library(ggplot2)
# Define file paths
input_file <- "2025_MLS_scenario1.rdat"
output_file <- "catch_plot.png"
# Read input data
s1 <- dget(input_file)
# Extract data
year <- seq(s1$genparms$startyear,s1$genparms$endyear,1)
avg <- s1$totalcatch$average
se <- s1$totalcatch$sdev
pct10 <- s1$totalcatch$pct10
pct25 <- s1$totalcatch$pct25
pct50 <- s1$totalcatch$pct50
pct75 <- s1$totalcatch$pct75
pct90 <- s1$totalcatch$pct90
pct99 <- s1$totalcatch$pct99
# Create data frame
df <- data.frame(
x = year, y = avg, se = se,
pct10 = pct10, pct25 = pct25, pct50 = pct50,
pct75 = pct75, pct90 = pct90, pct99 = pct99
)
# Create plot
pct10
pct90
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_2025_MLS_scenario3.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_3_RECRUIT.R", echo=TRUE)
getwd()
setwd("../..")
getwd()
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_3_RECRUIT.R", echo=TRUE)
setwd("Base Runs/Scenario2")
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario2/make_rdat_fleet_names.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario2/make_rdat_fleet_names.R", echo=TRUE)
getwd()
setwd("../..")
getwd()
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_2025_MLS_scenario3.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/make_3_RECRUIT.R", echo=TRUE)
setwd("../..")
getwd()
setwd("Base Runs/Scenario1")
# file = recruits-plot.R
# R script to create recruitment plot
# for projection output *.rdat file
# Load required library
library(ggplot2)
# Define file paths
input_file <- "2025_MLS_scenario1.rdat"
output_file <- "recruits_plot.png"
# Read input data
s1 <- dget(input_file)
# Extract data
year <- seq(s1$genparms$startyear, s1$genparms$endyear, 1)
avg <- s1$recruits$average
se <- s1$recruits$sdev
pct10 <- s1$recruits$pct10
pct25 <- s1$recruits$pct25
pct50 <- s1$recruits$pct50
pct75 <- s1$recruits$pct75
pct90 <- s1$recruits$pct90
pct99 <- s1$recruits$pct99
ssb_target <- s1$threshold$ssb
names(s1)
names(s1$genparms)
names(s1$recruits)
pct75
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/recruits-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/recruits-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/recruits-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/recruits-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/recruits-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/recruits-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/recruits-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/recruits-plot.R", echo=TRUE)
names(s1)
names(s1$threshprob)
s1$threshprob$ssb
s1$threshprob$fmort
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/probability-rebuild-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/ssb-threshold-plot.R", echo=TRUE)
s1$threshprob$ssb
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/ssb-threshold-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/ssb-threshold-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/ssb-threshold-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/ssb-threshold-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/ssb-threshold-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/ssb-threshold-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/catch-plot.R", echo=TRUE)
names(s1$threshprob)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/fmort-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/fmort-threshold-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/fmort-threshold-plot.R", echo=TRUE)
names(s$stock2021)
names(s1$stock2021)
s1$stock2021$pct50
s1$stock2022$pct50
s1$stock2023$pct50
s1$stock2024$pct50
s!$jan1bio
s1$jan1bio
s1$jan1bio
s1$jan1bio
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/popbio-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/popbio-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario1/ssb-plot.R", echo=TRUE)
setwd("Fleet Groups")
setwd("../Base Runs/Scenario2")
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario2/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario2/fmort-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario2/fmort-threshold-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario2/popbio-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario2/recruits-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario2/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario2/ssb-threshold-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario2/ssb-threshold-plot.R", echo=TRUE)
setwd("../Scenario3")
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario3/catch-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario3/fmort-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario3/fmort-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario3/fmort-threshold-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario3/popbio-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario3/popbio-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario3/recruits-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario3/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario3/ssb-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario3/ssb-threshold-plot.R", echo=TRUE)
source("~/Desktop/2024 WCNPO MLS Rebuilding/2025 MLS projections/Base Runs/Scenario3/ssb-threshold-plot.R", echo=TRUE)
